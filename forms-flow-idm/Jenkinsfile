pipeline {
    environment {
        DEPLOY = "${env.BRANCH_NAME == "develop" ? "true" : "false"}"
        NAME = "${env.BRANCH_NAME == "develop" ? "example" : "example-staging"}"
    }

    agent any

     stages {
        stage('Checkout forms-flow-idm') {
             when {
                environment name: 'DEPLOY', value: 'true'
            }
        }

        stage('Download Artifacts') {
             when {
                environment name: 'DEPLOY', value: 'true'
            }
            steps {
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2Fbg-theme%2F1.0.0%2Fbg-theme-1.0.0.jar -o keycloak/bg-theme-1.0.0.jar '
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2Feauth2-provider%2F1.0.0%2Feauth2-provider-1.0.0.jar -o keycloak/eauth2-provider-1.0.0.jar '
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2Feforms-theme%2F1.0.0%2Feforms-theme-1.0.0.jar -o keycloak/eforms-theme-1.0.0.jar'
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2Fsm-pin-provider%2F1.0.0%2Fsm-pin-provider-1.0.0.jar -o keycloak/sm-pin-provider-1.0.0.jar'
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2Fsm-theme%2F1.0.0%2Fsm-theme-1.0.0.jar -o keycloak/sm-theme-1.0.0.jar'
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2FeServices-theme%2F1.0.0%2FeServices-theme-1.0.0.jar -o keycloak/eServices-theme-1.0.0.jar'
                sh 'curl http://192.168.201.43:8081/repository/sofmun/com%2Fbulpros%2FdigitalSofia-theme%2F1.0.0%2FdigitalSofia-theme-1.0.0.jar -o keycloak/digitalSofia-theme-1.0.0.jar'
            }
        }

        stage('Build forms-flow-idm') {
            when {
                environment name: 'DEPLOY', value: 'true'
            }
            steps {
                sh 'sudo docker build -t sofiamunicipalitydigitall/forms-flow-idm:latest keycloak/'
            }
        }

        stage('Push Image') {
            when {
                environment name: 'DEPLOY', value: 'true'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'sudo docker push $DOCKER_USERNAME/forms-flow-idm:latest'
                }
            }
        }

        stage('Deploy DEV') {
            when {
                environment name: 'DEPLOY', value: 'true'
            }
            steps {
                withKubeConfig([credentialsId: 'kubeconfig', serverUrl: 'https://192.168.201.47:6443']) {
                   sh 'kubectl delete all --all -n forms-flow-idm '
                   sh 'kubectl apply -f ./infra/dev/deployment_dev.yaml '
                   sh 'kubectl apply -f ./infra/dev/service_dev.yaml '
                   sh 'kubectl apply -f ./infra/dev/ingress_dev.yaml '
                    }
                }
            }

        stage('Push Image with Tag') {
             when {
                tag "release-*"
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'sudo docker tag $DOCKER_USERNAME/forms-flow-idm:latest $DOCKER_USERNAME/forms-flow-idm:releasetest'
                    sh 'sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'sudo docker push $DOCKER_USERNAME/forms-flow-idm:releasetest'
                }
            }
        }

        stage('Deploy TEST') {
            when {
                //allOf {
                //environment name: 'DEPLOY', value: 'true'
                tag "release-*"
               // buildingTag()
                //}
            }
            steps {
                withKubeConfig([credentialsId: 'kubeconfig-test', serverUrl: 'https://192.168.201.42:6443']) {
                   sh 'kubectl delete all --all -n forms-flow-idm '
                   sh 'kubectl apply -f ./infra/test/deployment_test.yaml '
                   sh 'kubectl apply -f ./infra/test/service_test.yaml '
                   sh 'kubectl apply -f ./infra/test/ingress_test.yaml '
                    }
                }
            }
    }
}
